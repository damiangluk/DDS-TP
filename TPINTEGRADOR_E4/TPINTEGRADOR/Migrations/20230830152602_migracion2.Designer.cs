// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TPINTEGRADOR.Models.Sistema;

#nullable disable

namespace TPINTEGRADOR.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230830152602_migracion2")]
    partial class migracion2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TPINTEGRADOR.Models.Comunidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdministradorId")
                        .HasColumnType("int");

                    b.Property<int>("CantidadMiembrosAfectados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Comunidad");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Entidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoEntidad")
                        .HasColumnType("int");

                    b.Property<int>("TipoEntidadValue")
                        .HasColumnType("int")
                        .HasColumnName("TipoEntidad");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Entidad", t =>
                        {
                            t.Property("TipoEntidad")
                                .HasColumnName("TipoEntidad1");
                        });
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.FechasNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FechasNotificacion");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Localizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EntidadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoLocalizacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoLocalizacionValue")
                        .HasColumnType("int")
                        .HasColumnName("TipoLocalizacion");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.ToTable("Localizacion", t =>
                        {
                            t.Property("TipoLocalizacion")
                                .HasColumnName("TipoLocalizacion1");
                        });
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Medio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoMedio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Medios");

                    b.HasDiscriminator<int>("TipoMedio");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Participacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ComunidadId")
                        .HasColumnType("int");

                    b.Property<int>("MedioId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaId1")
                        .HasColumnType("int");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<int>("RolValue")
                        .HasColumnType("int")
                        .HasColumnName("Rol");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("PersonaId1");

                    b.ToTable("Participacion", t =>
                        {
                            t.Property("Rol")
                                .HasColumnName("Rol1");
                        });
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalizacionActualId")
                        .HasColumnType("int");

                    b.Property<int>("LocalizacionDeInteresId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalizacionActualId");

                    b.HasIndex("LocalizacionDeInteresId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Correo", b =>
                {
                    b.HasBaseType("TPINTEGRADOR.Models.Medio");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Whatsapp", b =>
                {
                    b.HasBaseType("TPINTEGRADOR.Models.Medio");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Comunidad", b =>
                {
                    b.HasOne("TPINTEGRADOR.Models.Persona", "Administrador")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Entidad", b =>
                {
                    b.HasOne("TPINTEGRADOR.Models.Persona", null)
                        .WithMany("EntidadesInteresadas")
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.FechasNotificacion", b =>
                {
                    b.HasOne("TPINTEGRADOR.Models.Persona", "Persona")
                        .WithMany("HorariosParaNotificacion")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Localizacion", b =>
                {
                    b.HasOne("TPINTEGRADOR.Models.Entidad", null)
                        .WithMany("Localizaciones")
                        .HasForeignKey("EntidadId");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Participacion", b =>
                {
                    b.HasOne("TPINTEGRADOR.Models.Comunidad", "Comunidad")
                        .WithMany("Miembros")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TPINTEGRADOR.Models.Medio", "Medio")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TPINTEGRADOR.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TPINTEGRADOR.Models.Persona", null)
                        .WithMany("Participaciones")
                        .HasForeignKey("PersonaId1");

                    b.Navigation("Comunidad");

                    b.Navigation("Medio");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Persona", b =>
                {
                    b.HasOne("TPINTEGRADOR.Models.Localizacion", "LocalizacionActual")
                        .WithMany()
                        .HasForeignKey("LocalizacionActualId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TPINTEGRADOR.Models.Localizacion", "LocalizacionDeInteres")
                        .WithMany()
                        .HasForeignKey("LocalizacionDeInteresId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LocalizacionActual");

                    b.Navigation("LocalizacionDeInteres");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Usuario", b =>
                {
                    b.HasOne("TPINTEGRADOR.Models.Persona", "Persona")
                        .WithOne("Usuario")
                        .HasForeignKey("TPINTEGRADOR.Models.Usuario", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Comunidad", b =>
                {
                    b.Navigation("Miembros");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Entidad", b =>
                {
                    b.Navigation("Localizaciones");
                });

            modelBuilder.Entity("TPINTEGRADOR.Models.Persona", b =>
                {
                    b.Navigation("EntidadesInteresadas");

                    b.Navigation("HorariosParaNotificacion");

                    b.Navigation("Participaciones");

                    b.Navigation("Usuario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
